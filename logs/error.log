Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 73, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 275, in extract
    result = ExcelExtract.main(var2.get(), var3.get(), var1.get())
  File "D:\My Projects\Excel-Tools\ExcelExtract.py", line 4, in main
    wb = openpyxl.load_workbook(file)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\reader\excel.py", line 346, in load_workbook
    reader = ExcelReader(filename, read_only, keep_vba,
                         data_only, keep_links, rich_text)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\reader\excel.py", line 123, in __init__
    self.archive = _validate_archive(fn)
                   ~~~~~~~~~~~~~~~~~^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\reader\excel.py", line 93, in _validate_archive
    raise InvalidFileException(msg)
openpyxl.utils.exceptions.InvalidFileException: openpyxl does not support the old .xls file format, please use xlrd to read this file, or convert it to the more recent .xlsx file format.
Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 73, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 294, in search
    error_img = GoogleSearch.main(t1.get("1.0", tk.END).split("\n"), app.settings['filter'], app.settings['path'])
                                                                                             ~~~~~~~~~~~~^^^^^^^^
KeyError: 'path'
Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 73, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 294, in search
    error_img = GoogleSearch.main(t1.get("1.0", tk.END).split("\n"), app.settings['filter'], app.settings['path'])
                                                                                             ~~~~~~~~~~~~^^^^^^^^
KeyError: 'path'
----------Above 2025-05-01 16:31:04----------

Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 73, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 308, in insert
    error_insert = ExcelInsert.main([var4.get()[0], int(var4.get()[1:])], num, var1.get(), r'.\imgs')
  File "D:\My Projects\Excel-Tools\ExcelInsert.py", line 79, in main
    state = insert(excel_path, img_path, start_cell)
  File "D:\My Projects\Excel-Tools\ExcelInsert.py", line 63, in insert
    wb.save(excel_path)
    ~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\workbook\workbook.py", line 386, in save
    save_workbook(self, filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\writer\excel.py", line 291, in save_workbook
    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\zipfile\__init__.py", line 1367, in __init__
    self.fp = io.open(file, filemode)
              ~~~~~~~^^^^^^^^^^^^^^^^
PermissionError: [Errno 13] Permission denied: 'D:/2025-JOY/1-°¢ÁªÇõ/DHL28/DHL28.xlsx'
Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 73, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 308, in insert
    error_insert = ExcelInsert.main([var4.get()[0], int(var4.get()[1:])], num, var1.get(), r'.\imgs')
  File "D:\My Projects\Excel-Tools\ExcelInsert.py", line 79, in main
    state = insert(excel_path, img_path, start_cell)
  File "D:\My Projects\Excel-Tools\ExcelInsert.py", line 63, in insert
    wb.save(excel_path)
    ~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\workbook\workbook.py", line 386, in save
    save_workbook(self, filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\writer\excel.py", line 291, in save_workbook
    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\zipfile\__init__.py", line 1367, in __init__
    self.fp = io.open(file, filemode)
              ~~~~~~~^^^^^^^^^^^^^^^^
PermissionError: [Errno 13] Permission denied: 'D:/2025-JOY/1-°¢ÁªÇõ/DHL28/DHL28.xlsx'
----------Above 2025-05-01 16:39:23----------

Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 69, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 327, in move_key
    MoveKey.main(var1.get(), var5.get(), var6.get(), var7.get())
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\My Projects\Excel-Tools\MoveKey.py", line 11, in main
    now = start[0]
          ~~~~~^^^
IndexError: string index out of range
----------Above 2025-05-01 16:41:02----------

Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 70, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 327, in move_key
    MoveKey.main(var1.get(), var5.get(), var6.get(), var7.get())
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\My Projects\Excel-Tools\MoveKey.py", line 11, in main
    now = start[0]
          ~~~~~^^^
IndexError: string index out of range
Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 70, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 327, in move_key
    MoveKey.main(var1.get(), var5.get(), var6.get(), var7.get())
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\My Projects\Excel-Tools\MoveKey.py", line 11, in main
    now = start[0]
          ~~~~~^^^
IndexError: string index out of range
----------Above 2025-05-01 16:41:52----------

Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\tkinter\__init__.py", line 2068, in __call__
    return self.func(*args)
           ~~~~~~~~~^^^^^^^
  File "D:\My Projects\Excel-Tools\Logger.py", line 70, in wrapper
    result = func(*args, **kwargs)
  File "D:\My Projects\Excel-Tools\main.py", line 327, in move_key
    MoveKey.main(var1.get(), var5.get(), var6.get(), var7.get())
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\My Projects\Excel-Tools\MoveKey.py", line 11, in main
    now = start[0]
          ~~~~~^^^
IndexError: string index out of range
Exception in thread Thread-1 (update):
urllib3.exceptions.SSLError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\requests\adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\urllib3\connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\urllib3\util\retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.github.com', port=443): Max retries exceeded with url: /repos/Aqiulawrence/Excel-Tools/releases/latest (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\threading.py", line 1041, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\threading.py", line 992, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\My Projects\Excel-Tools\main.py", line 263, in update
    state = CheckUpdate.update(VERSION) # ·µ»ØÖµÓÐÈýÖÖ£º0±íÊ¾»ñÈ¡¸üÐÂÊ§°Ü£¨Ã»¿ªVPN£©¡¢1±íÊ¾ÐÂ°æ±¾ÏÂÔØÍêÁË¡¢°æ±¾ºÅ
  File "D:\My Projects\Excel-Tools\CheckUpdate.py", line 37, in update
    response = requests.get(api_url, headers=headers)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\requests\api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\requests\api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\requests\sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\requests\sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\requests\adapters.py", line 698, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: HTTPSConnectionPool(host='api.github.com', port=443): Max retries exceeded with url: /repos/Aqiulawrence/Excel-Tools/releases/latest (Caused by SSLError(SSLEOFError(8, '[SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1028)')))
Process SpawnPoolWorker-3:
Process SpawnPoolWorker-1:
Process SpawnPoolWorker-8:
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 313, in _bootstrap
    self.run()
    ~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 39, in single_search
    if not os.path.exists(PATH):
           ~~~~~~~~~~~~~~^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 313, in _bootstrap
    self.run()
    ~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 46, in single_search
    single_search(output_file, search_term, file_path)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 64, in single_search
    for row in worksheet.iter_rows():
               ~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_read_only.py", line 85, in _cells_by_row
    for idx, row in parser.parse():
                    ~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_reader.py", line 167, in parse
    row = self.parse_row(element)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_reader.py", line 303, in parse_row
    cells = [self.parse_cell(el) for el in row]
             ~~~~~~~~~~~~~~~^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 313, in _bootstrap
    self.run()
    ~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_reader.py", line 208, in parse_cell
    if not self.data_only and element.find(FORMULA_TAG) is not None:
                              ~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 64, in single_search
    for row in worksheet.iter_rows():
               ~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_read_only.py", line 85, in _cells_by_row
    for idx, row in parser.parse():
                    ~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_reader.py", line 156, in parse
    for _, element in it:
                      ^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\xml\etree\ElementTree.py", line 1236, in iterator
    yield from pullparser.read_events()
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\xml\etree\ElementTree.py", line 1321, in read_events
    yield event
KeyboardInterrupt
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 313, in _bootstrap
    self.run()
    ~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 78, in single_search
    value = str(worksheet[index].value)
                ~~~~~~~~~^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\worksheet.py", line 311, in __getitem__
    return self._get_cell(min_row, min_col)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_read_only.py", line 132, in _get_cell
    for row in self._cells_by_row(column, row, column, row):
               ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_read_only.py", line 77, in _cells_by_row
    with self._get_source() as src:
         ~~~~~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_read_only.py", line 57, in _get_source
    return self.parent._archive.open(self._worksheet_path)
           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\zipfile\__init__.py", line 1703, in open
    return ZipExtFile(zef_file, mode + 'b', zinfo, pwd, True)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\zipfile\__init__.py", line 889, in __init__
    self._decompressor = _get_decompressor(self._compress_type)
                         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\zipfile\__init__.py", line 789, in _get_decompressor
    return zlib.decompressobj(-15)
           ~~~~~~~~~~~~~~~~~~^^^^^
KeyboardInterrupt
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 313, in _bootstrap
    self.run()
    ~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 64, in single_search
    for row in worksheet.iter_rows():
               ~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_read_only.py", line 85, in _cells_by_row
    for idx, row in parser.parse():
                    ~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_reader.py", line 154, in parse
    it = iterparse(self.source) # add a finaliser to close the source when this becomes possible
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 313, in _bootstrap
    self.run()
    ~~~~~~~~^^
nts=events, _parser=parser)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\xml\etree\ElementTree.py", line 1273, in __init__
    def __init__(self, events=None, *, _parser=None):
    
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 78, in single_search
    value = str(worksheet[index].value)
                ~~~~~~~~~^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\worksheet.py", line 311, in __getitem__
    return self._get_cell(min_row, min_col)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_read_only.py", line 132, in _get_cell
    for row in self._cells_by_row(column, row, column, row):
               ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_read_only.py", line 85, in _cells_by_row
    for idx, row in parser.parse():
                    ~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_reader.py", line 167, in parse
    row = self.parse_row(element)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\openpyxl\worksheet\_reader.py", line 283, in parse_row
    attrs = dict(row.attrib)
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 313, in _bootstrap
    self.run()
    ~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 45, in single_search
    convert(file_path, output_file)
    ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 21, in convert
    pandas.read_excel(input_file).to_excel(output_file, index=False)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\excel\_base.py", line 495, in read_excel
    io = ExcelFile(
        io,
    ...<2 lines>...
        engine_kwargs=engine_kwargs,
    )
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\excel\_base.py", line 1567, in __init__
    self._reader = self._engines[engine](
                   ~~~~~~~~~~~~~~~~~~~~~^
        self._io,
        ^^^^^^^^^
        storage_options=storage_options,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        engine_kwargs=engine_kwargs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
KeyboardInterrupt
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 313, in _bootstrap
    self.run()
    ~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 125, in worker
    result = (True, func(*args, **kwds))
                    ~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\multiprocessing\pool.py", line 51, in starmapstar
    return list(itertools.starmap(args[0], args[1]))
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 45, in single_search
    convert(file_path, output_file)
    ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\My Projects\Excel-Tools\ExcelSearch.py", line 21, in convert
    pandas.read_excel(input_file).to_excel(output_file, index=False)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\util\_decorators.py", line 333, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\generic.py", line 2417, in to_excel
    formatter.write(
    ~~~~~~~~~~~~~~~^
        excel_writer,
        ^^^^^^^^^^^^^
    ...<6 lines>...
        engine_kwargs=engine_kwargs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\formats\excel.py", line 943, in write
    writer = ExcelWriter(
        writer,
    ...<2 lines>...
        engine_kwargs=engine_kwargs,
    )
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\excel\_openpyxl.py", line 61, in __init__
    super().__init__(
    ~~~~~~~~~~~~~~~~^
        path,
        ^^^^^
    ...<3 lines>...
        engine_kwargs=engine_kwargs,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\excel\_base.py", line 1246, in __init__
    self._handles = get_handle(
                    ~~~~~~~~~~^
        path, mode, storage_options=storage_options, is_text=False
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\common.py", line 882, in get_handle
    handle = open(handle, ioargs.mode)
KeyboardInterrupt
